AWSTemplateFormatVersion: '2010-09-09'

Description: create IAM role

Parameters:
  S3StackNameParameter:
    Type: String
    Description: s3 stack name
  IamUserArn:
    Description: IAM user ARN (S3 access)
    Type: String
    Default: arn:aws:iam::000000000000:user/dummy
Conditions:
  IsS3RoleEnable: !Not
    - !Equals
      - !Ref 'IamUserArn'
      - arn:aws:iam::000000000000:user/dummy

Resources:
  IamRoleS3access:
    Condition: IsS3RoleEnable
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'iam-role-${S3StackNameParameter}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref 'IamUserArn'
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: 'true'
              IpAddress:
                aws:SourceIp:
                  - 0.0.0.0/0
                  - ::/0
      Policies:
        - PolicyName: S3accessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub
                    - 'arn:aws:s3:::${S3BucketName}/*'
                    - S3BucketName:
                        Fn::ImportValue: !Sub '${S3StackNameParameter}-PublicBucket'
                  - !Sub
                    - 'arn:aws:s3:::${S3BucketName}'
                    - S3BucketName:
                        Fn::ImportValue: !Sub '${S3StackNameParameter}-PublicBucket'
              - Effect: Deny
                Action:
                  - s3:PutBucket*
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - cloudfront:Get*
                  - cloudfront:List*
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource:
                  - !Sub
                    - 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistributionId}'
                    - CloudFrontDistributionId:
                        Fn::ImportValue: !Sub '${S3StackNameParameter}-CloudFront'
