AWSTemplateFormatVersion: "2010-09-09"

Description: create CodePipeline to deploy static site

Mappings:
  GitHubMapping:
    Repository:
      FullRepositoryId: kkenya/blog
      BranchName: main

Resources:
  Deploypipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStore
        Type: S3
      Name: !Sub codePipeline-${AWS::StackName}
      # RoleArn: String
      Stages:
        - Actions:
            - ActionTypeId: # https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodestarConnectionSource.html
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Ref SourceConnection
                FullRepositoryId:
                  !FindInMap ['GitHubMapping', 'Repository', 'FullRepositoryId']
                BranchName:
                  !FindInMap ['GitHubMapping', 'Repository', 'BranchName']
                OutputArtifactFormat: CODE_ZIP # default
                DetectChanges: true # Controls automatically starting your pipeline when a new commit is made on the configured repository and branch. If unspecified, the default value is true
              Name: SourceAction
              Namespace: SourceAction
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1
          Name: SourceAction
        - Actions:
            - ActionTypeId: # https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference-CodeBuild.html
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                BatchEnabled: false
                CombineArtifacts: false
                ProjectName: !Ref BuildSource
                # EnvironmentVariables: '[{"name":"TEST_VARIABLE","value":"TEST_VALUE","type":"PLAINTEXT"},{"name":"ParamStoreTest","value":"PARAMETER_NAME","type":"PARAMETER_STORE"}]'
              InputArtifacts:
                - Name: SourceArtifact
              Name: BuildAction
              Namespace: BuildAction
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
          Name: BuildAction
        - Actions:
            - ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                BucketName: !ImportValue BlogAssetsS3BucketName
                Extract: true
              InputArtifacts:
                - Name: BuildArtifact
              Name: DeployAction
              Namespace: DeployAction
              RunOrder: 1
          Name: DeployAction
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-CodePipeline'

  ArtifactStore:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'artifactStore-${AWS::StackName}'

  SourceConnection: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestarconnections-connection.html
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: !Sub 'codeStartConnection-${AWS::StackName}'
      ProviderType: GitHub
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-CodePipeline'

  DeploypipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: code pipeline service role
      Path: /aws-service-role/
      RoleName: !Sub 'codepipeline-role-${AWS::StackName}'
      Policies:
        - PolicyName: !Sub 'codepipeline-policy-${AWS::StackName}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3Policy
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStore.Arn
                Action:
                  - s3:GetObject
                  - s3:List*
                  - s3:PutObject
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-CodePipeline'

  BuildSource:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html
        Type: CODEPIPELINE
      Cache:
        Type: NO_CACHE # default
      ConcurrentBuildLimit: 1
      Description: !Sub 'codeBuild for ${AWS::StackName}'
      Environment: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-environment.html
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: NODE_ENV
            Type: PLAINTEXT
            Value: production
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0 # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Sub '/aws/codebuild/${AWS::StackName}'
          Status: ENABLED
          StreamName: build-log
        S3Logs:
          Status: DISABLED
      Name: !Sub 'codeBuild-${AWS::StackName}'
      QueuedTimeoutInMinutes: 30 # Minimum: 5, Maximum: 480
      # ResourceAccessRole: String
      ServiceRole: !!GetAtt DeploypipelineServiceRole.Arn
      Source: # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-source.html
        BuildSpec: specs/build.yaml
        BuildStatusConfig:
          Context: Build source # display as check name
        ReportBuildStatus: true
        SourceIdentifier: BuildSource
        Type: GITHUB
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-CodeBuild'
      TimeoutInMinutes: 30 # default: 60, Minimum: 5, Maximum: 480

  BuildSourceServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: code build service role
      Path: /aws-service-role/
      RoleName: !Sub 'codebuild-role-${AWS::StackName}'
      Policies:
        - PolicyName: !Sub 'codebuild-policy-${AWS::StackName}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}:*'
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Sid: S3Policy
                Effect: Allow
                Resource:
                  - !GetAtt ArtifactStore.Arn
                Action:
                  - s3:GetObject
                  - s3:List*
                  - s3:PutObject
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-CodeBuild'
